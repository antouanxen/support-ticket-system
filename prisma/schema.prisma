generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model agent {
  agentId              String               @id(map: "PK_5e23a168ceafc7036e0e3de0bf7") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  agentOwnEmail        String?              @db.VarChar(150)
  userId               String?              @unique(map: "UQ_15baaa1eb6dd8d1f0a92a17d667") @db.Uuid
  asUser               user?                @relation("asUser", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_15baaa1eb6dd8d1f0a92a17d667")
  rejectedRequests     request_permission[] @relation("requests_rejectedByAgent")
  requestedRequests    request_permission[] @relation("requests_forAgent")
  approvedRequests     request_permission[] @relation("requests_approvedByAgent")
  assignedAsSupervisor supervisors_agents[] @relation("supervisors_agents_assignedAsSupervisor")
  assignedAsAgent      supervisors_agents[] @relation("supervisors_agents_assignedAsAgent")
  ticket               ticket[]
}

model category {
  id           String     @id(map: "PK_9c4e4a89e3674fc9f382d733f03") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  categoryName String     @unique(map: "UQ_cb776c7d842f8375b60273320dc") @db.VarChar(150)
  created_at   DateTime   @default(now()) @db.Timestamp(6)
  updated_at   DateTime   @default(now()) @db.Timestamp(6)
  engineer     engineer[]
  ticket       ticket[]
}

model comment {
  id         String   @id(map: "PK_0b0e4bbc8415ec426f87f3a88e2") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  content    String
  created_at DateTime @default(now()) @db.Timestamp(6)
  ticketId   String?  @db.Uuid
  userId     String?  @db.Uuid
  ticket     ticket?  @relation(fields: [ticketId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_7522f1f6b36fa4b1742762a17f9")
  user       user?    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c0354a9a009d3bb45a08655ce3b")
}

model customer {
  id          String   @id(map: "PK_a7a13f4cacb744524e44dfdad32") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  c_name      String   @unique(map: "UQ_fd862345ba69c29b4481db057a8") @db.VarChar(255)
  company     String?  @db.VarChar(255)
  c_email     String   @unique(map: "UQ_8a311e65517e0feae004b611fcf") @db.VarChar(150)
  c_telNumber String?  @db.VarChar
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  ticket      ticket[]
}

model dependent_tickets {
  ticketCustomId                            String @db.Char(9)
  dependentTicketCustomId                   String @db.Char(9)
  dependent_tickets_dependentTicketCustomId ticket @relation("dependent_tickets_dependentTicketCustomId", fields: [dependentTicketCustomId], references: [customTicketId], onDelete: Cascade, map: "FK_1d76fe23b2e101426ef957a132d")
  dependent_tickets_ticketCustomId          ticket @relation("dependent_tickets_ticketCustomId", fields: [ticketCustomId], references: [customTicketId], onDelete: Cascade, map: "FK_d0a5777578b2a55063f8f2c4743")

  @@id([ticketCustomId, dependentTicketCustomId], map: "PK_dc33582c19badea04e9586f131b")
  @@index([dependentTicketCustomId], map: "IDX_1d76fe23b2e101426ef957a132")
  @@index([ticketCustomId], map: "IDX_d0a5777578b2a55063f8f2c474")
}

model engineer {
  engineerId         String               @id(map: "PK_460c1a7044eb006e30bbbc688da") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  engineerOwnEmail   String?              @db.VarChar(150)
  categoryId         String?              @db.Uuid
  userId             String?              @unique(map: "UQ_8d9c64597951e26c9632bf8c7ad") @db.Uuid
  assigned_engineers assigned_engineers[]
  category           category?            @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_3f3a393bf2252f0eb9c0ffe63ec")
  asUser             user?                @relation("asUser", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8d9c64597951e26c9632bf8c7ad")
}

model request_permission {
  request_id       String    @id(map: "PK_b928279192dbf9e8d5ada868ee3") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  request_status   String    @db.VarChar
  requestType      String    @db.VarChar
  issued_at        DateTime  @default(now()) @db.Timestamp(6)
  approved_at      DateTime? @db.Timestamp(6)
  rejected_at      DateTime? @db.Timestamp(6)
  numberOfDays     Int?
  agentName        String?   @db.VarChar(255)
  agentEmail       String?   @db.VarChar(150)
  agentPassword    String?   @db.VarChar
  approvedBy       String?   @db.Uuid
  rejectedBy       String?   @db.Uuid
  requestForAgent  String?   @db.Uuid
  rejectedByAgent  agent?    @relation("requests_rejectedByAgent", fields: [rejectedBy], references: [agentId], onDelete: NoAction, onUpdate: NoAction, map: "FK_3febbe2d24e5e498540ef0e6917")
  requestedByAgent agent?    @relation("requests_forAgent", fields: [requestForAgent], references: [agentId], onDelete: NoAction, onUpdate: NoAction, map: "FK_9e2484029aed83d6f8e0cdfda09")
  approvedByAgent  agent?    @relation("requests_approvedByAgent", fields: [approvedBy], references: [agentId], onDelete: NoAction, onUpdate: NoAction, map: "FK_a28922aee4e01f58a1085db2d68")
}

model role {
  role_id          String @id(map: "PK_df46160e6aa79943b83c81e496e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  role_description String @unique(map: "UQ_6560f76603dbece78b1c50a0d41") @db.VarChar(150)
  user             user[]
}

model ticket {
  id                                        String               @id(map: "PK_d9a0835407701eb86f874474b7c") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  issue_description                         String?
  priority                                  String               @db.VarChar(150)
  status                                    String               @db.VarChar(150)
  featuredImageUrl                          String?              @db.VarChar(1054)
  created_at                                DateTime             @default(now()) @db.Timestamp(6)
  updated_at                                DateTime             @default(now()) @db.Timestamp(6)
  customerId                                String               @db.Uuid
  categoryId                                String               @db.Uuid
  customTicketId                            String               @unique(map: "UQ_e9f7fd3d9442ba4c97a4c80e7df") @db.Char(9)
  agentId                                   String               @db.Uuid
  assigned_engineers                        assigned_engineers[]
  comment                                   comment[]
  dependent_tickets_dependentTicketCustomId dependent_tickets[]  @relation("dependent_tickets_dependentTicketCustomId")
  dependent_tickets_ticketCustomId          dependent_tickets[]  @relation("dependent_tickets_ticketCustomId")
  customer                                  customer             @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8932781487db15d1393b206482e")
  agent                                     agent                @relation(fields: [agentId], references: [agentId], onDelete: NoAction, onUpdate: NoAction, map: "FK_f5989db50fbbea2647f37d0d4d1")
  category                                  category             @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ffa1e18b27ae5dfb0988873354a")
}

model supervisors_agents {
  id                                      String   @id(map: "PK_7edf180f8d708c3e058eee014ec") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  supervisor                              String?  @db.Uuid
  agent                                   String?  @db.Uuid
  assigned_at                             DateTime @default(now()) @db.Timestamp(6)
  supervisors_agents_assignedAsSupervisor agent?   @relation("supervisors_agents_assignedAsSupervisor", fields: [supervisor], references: [agentId], onUpdate: NoAction, map: "FK_0a5c0fcadda694cbbaba23e5771")
  supervisors_agents_assignedAsAgent      agent?   @relation("supervisors_agents_assignedAsAgent", fields: [agent], references: [agentId], onUpdate: NoAction, map: "FK_c55285a52519da722bf35fdf201")

  @@unique([supervisor, agent], map: "UQ_8606beeeb710838423ee61ebb2b")
}

model user {
  id             String    @id(map: "PK_cace4a159ff9f2512dd42373760") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userName       String    @db.VarChar(255)
  userEmail      String    @unique(map: "UQ_85432bb369f1a54116c4e4d2ee2") @db.VarChar(150)
  userPassword   String    @db.VarChar
  tokenVersion   Int       @default(1)
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  updated_at     DateTime  @default(now()) @db.Timestamp(6)
  last_logged_at DateTime  @default(now()) @db.Timestamp(6)
  roleId         String?   @db.Uuid
  agent          agent?    @relation("asUser")
  comment        comment[]
  engineer       engineer? @relation("asUser")
  role           role?     @relation(fields: [roleId], references: [role_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c28e52f758e7bbc53828db92194")
}

model assigned_engineers {
  ticketCustomId String   @db.Char(9)
  engineerId     String   @db.Uuid
  engineer       engineer @relation(fields: [engineerId], references: [engineerId], onDelete: NoAction, onUpdate: NoAction, map: "FK_34f3a4442d2ae011e50a87140a7")
  ticket         ticket   @relation(fields: [ticketCustomId], references: [customTicketId], onDelete: Cascade, map: "FK_cb4e7d45fb2f7a03af2ae0a296c")

  @@id([ticketCustomId, engineerId], map: "PK_98c4c6347920f8ebfecee4351ab")
  @@index([engineerId], map: "IDX_34f3a4442d2ae011e50a87140a")
  @@index([ticketCustomId], map: "IDX_cb4e7d45fb2f7a03af2ae0a296")
  @@index([engineerId], map: "fki_FK_34f3a4442d2ae011e50a87140a7")
}
