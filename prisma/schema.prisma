generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id           String   @id(map: "PK_9c4e4a89e3674fc9f382d733f03") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  categoryName String   @unique(map: "UQ_cb776c7d842f8375b60273320dc") @db.VarChar(150)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  ticket       ticket[]
  user         user[]
}

model comment {
  id         String   @id(map: "PK_0b0e4bbc8415ec426f87f3a88e2") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  content    String
  created_at DateTime @default(now()) @db.Timestamp(6)
  ticketId   String?  @db.Uuid
  userId     String?  @db.Uuid
  user       user?    @relation(fields: [userId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "FK_1a0a9c69d17cfb196d090858bc8")
  ticket     ticket?  @relation(fields: [ticketId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_7522f1f6b36fa4b1742762a17f9")
}

model customer {
  id          String   @id(map: "PK_a7a13f4cacb744524e44dfdad32") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  c_name      String   @unique(map: "UQ_fd862345ba69c29b4481db057a8") @db.VarChar(255)
  company     String?  @db.VarChar(255)
  c_email     String   @unique(map: "UQ_8a311e65517e0feae004b611fcf") @db.VarChar(150)
  c_telNumber String?  @db.VarChar
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  ticket      ticket[]
}

model dependent_tickets {
  ticketCustomId           String @db.VarChar(10)
  dependentTicketCustomId  String @db.VarChar(10)
  dependent_tickets_child  ticket @relation("dependent_tickets_child", fields: [dependentTicketCustomId], references: [customTicketId], onDelete: Cascade, map: "FK_1d76fe23b2e101426ef957a132d")
  dependent_tickets_parent ticket @relation("dependent_tickets_parent", fields: [ticketCustomId], references: [customTicketId], onDelete: Cascade, map: "FK_d0a5777578b2a55063f8f2c4743")

  @@id([ticketCustomId, dependentTicketCustomId], map: "PK_dc33582c19badea04e9586f131b")
  @@index([dependentTicketCustomId], map: "IDX_1d76fe23b2e101426ef957a132")
  @@index([ticketCustomId], map: "IDX_d0a5777578b2a55063f8f2c474")
}

model request_permission {
  request_id       String    @id(map: "PK_b928279192dbf9e8d5ada868ee3") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  request_status   String    @db.VarChar
  requestType      String    @db.VarChar
  issued_at        DateTime  @default(now()) @db.Timestamp(6)
  approved_at      DateTime? @db.Timestamp(6)
  rejected_at      DateTime? @db.Timestamp(6)
  numberOfDays     Int?
  agentName        String?   @db.VarChar(255)
  agentEmail       String?   @db.VarChar(150)
  agentPassword    String?   @db.VarChar
  approvedBy       String?   @db.Uuid
  rejectedBy       String?   @db.Uuid
  requestForAgent  String?   @db.Uuid
  rejectedByAgent  user?     @relation("requests_rejectedByAgent", fields: [rejectedBy], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "FK_3febbe2d24e5e498540ef0e6917")
  requestedByAgent user?     @relation("requests_forAgent", fields: [requestForAgent], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "FK_9e2484029aed83d6f8e0cdfda09")
  approvedByAgent  user?     @relation("requests_approvedByAgent", fields: [approvedBy], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "FK_a28922aee4e01f58a1085db2d68")
}

model role {
  role_id          String @id(map: "PK_df46160e6aa79943b83c81e496e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  role_description String @unique(map: "UQ_6560f76603dbece78b1c50a0d41") @db.VarChar(150)
  user             user[]
}

model ticket {
  id                       String               @id(map: "PK_d9a0835407701eb86f874474b7c") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  issue_description        String?
  priority                 String               @db.VarChar(150)
  status                   String               @db.VarChar(150)
  featuredImageUrl         String?              @db.VarChar(1054)
  customTicketId           String               @unique(map: "UQ_e9f7fd3d9442ba4c97a4c80e7df") @db.VarChar(10)
  created_at               DateTime             @default(now()) @db.Timestamp(6)
  updated_at               DateTime             @default(now()) @db.Timestamp(6)
  due_date                 DateTime?            @db.Timestamp(6)
  cancelled_date           DateTime?            @db.Timestamp(6)
  re_opened_date           DateTime?            @db.Timestamp(6)
  userAgentId              String               @db.Uuid
  customerId               String               @db.Uuid
  categoryId               String               @db.Uuid
  assigned_engineers       assigned_engineers[]
  comment                  comment[]
  dependent_tickets_child  dependent_tickets[]  @relation("dependent_tickets_child")
  dependent_tickets_parent dependent_tickets[]  @relation("dependent_tickets_parent")
  userAgent                user                 @relation(fields: [userAgentId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "FK_561eeb74b28cbf8b6b5cae6bc92")
  customer                 customer             @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_8932781487db15d1393b206482e")
  category                 category             @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ffa1e18b27ae5dfb0988873354a")
}

model user {
  userName                     String                   @db.VarChar(255)
  userEmail                    String                   @unique(map: "UQ_85432bb369f1a54116c4e4d2ee2") @db.VarChar(150)
  userPassword                 String                   @db.VarChar
  tokenVersion                 Int                      @default(1)
  created_at                   DateTime                 @default(now()) @db.Timestamp(6)
  updated_at                   DateTime                 @default(now()) @db.Timestamp(6)
  last_logged_at               DateTime                 @default(now()) @db.Timestamp(6)
  roleId                       String?                  @db.Uuid
  userId                       String                   @id(map: "PK_d72ea127f30e21753c9e229891e") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userOwnEmail                 String?                  @db.VarChar(150)
  categoryForEngineersId       String?                  @db.Uuid
  assigned_engineers           assigned_engineers[]
  comment                      comment[]
  notifications                notification[]
  notification_listeners       notification_listeners[]
  rejectedRequests             request_permission[]     @relation("requests_rejectedByAgent")
  requestedRequests            request_permission[]     @relation("requests_forAgent")
  approvedRequests             request_permission[]     @relation("requests_approvedByAgent")
  supervisors_users_supervisor supervisors_users[]      @relation("supervisors_users_supervisor")
  supervisors_users_user       supervisors_users[]      @relation("supervisors_users_user")
  ticket                       ticket[]
  category                     category?                @relation(fields: [categoryForEngineersId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_bf5be5feb27c5c806aa66c787f8")
  role                         role?                    @relation(fields: [roleId], references: [role_id], onDelete: NoAction, onUpdate: NoAction, map: "FK_c28e52f758e7bbc53828db92194")
}

model assigned_engineers {
  ticketCustomId String @db.VarChar(10)
  userEngineerId String @db.Uuid
  user           user   @relation(fields: [userEngineerId], references: [userId], onDelete: SetNull, onUpdate: NoAction, map: "FK_6b2c75379b00f0466518a6e63d7")
  ticket         ticket @relation(fields: [ticketCustomId], references: [customTicketId], onDelete: Cascade, map: "FK_cb4e7d45fb2f7a03af2ae0a296c")

  @@id([ticketCustomId, userEngineerId], map: "PK_de08d2f4e63e184cdf0158544e5")
  @@index([ticketCustomId], map: "IDX_cb4e7d45fb2f7a03af2ae0a296")
  @@index([userEngineerId], map: "IDX_6b2c75379b00f0466518a6e63d")
}

model notification {
  id                     String                   @id(map: "PK_705b6c7cdf9b2c2ff7ac7872cb7") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  action                 String                   @db.VarChar
  content                String                   @db.VarChar(50)
  created_at             DateTime                 @default(now()) @db.Timestamp(6)
  customTicketId         String                   @db.Char(9)
  userActed              String?                  @db.Uuid
  user                   user?                    @relation(fields: [userActed], references: [userId], onDelete: Cascade, onUpdate: NoAction, map: "FK_1af943652a5d7b70f1c18afbbda")
  notification_listeners notification_listeners[]
}

model notification_listeners {
  notificationId String       @db.Uuid
  userId         String       @db.Uuid
  user           user         @relation(fields: [userId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "FK_68a339aa7a4bf283124eb707948")
  notification   notification @relation(fields: [notificationId], references: [id], onDelete: Cascade, map: "FK_f9fdc4aadaa9991b333a0048cdc")

  @@id([notificationId, userId], map: "PK_9c3486dc31713315bc6538ecd5f")
  @@index([userId], map: "IDX_68a339aa7a4bf283124eb70794")
  @@index([notificationId], map: "IDX_f9fdc4aadaa9991b333a0048cd")
}

model supervisors_users {
  id                           String   @id(map: "PK_d6c42d1ed2f6daf18650ae4a6ed") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  assigned_at                  DateTime @default(now()) @db.Timestamp(6)
  supervisor                   String?  @db.Uuid
  user                         String?  @db.Uuid
  supervisors_users_supervisor user?    @relation("supervisors_users_supervisor", fields: [supervisor], references: [userId], onUpdate: NoAction, map: "FK_7d0b7cd3db17cc67b1f1afc2807")
  supervisors_users_user       user?    @relation("supervisors_users_user", fields: [user], references: [userId], onUpdate: NoAction, map: "FK_36e7c58181fa3d334ee6a21805d")

  @@unique([supervisor, user], map: "UQ_6a47a3a5952d27dfc61ba220b5d")
}
